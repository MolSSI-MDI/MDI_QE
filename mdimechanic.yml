code_name: 'QE'
docker:
  image_name: 'mdi/qe-intel'

  build_image:
    - apt-get update
    - apt-get install -y git wget vim gpg-agent

    # download the key to system keyring
    - wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null

    # add signed entry to apt sources and configure the APT client to use Intel repository:
    - echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list
    - apt update
    - apt install intel-basekit -y
    - apt install intel-hpckit -y

    - pip install cmake
    - pip install pymdi
    - pip install mpi4py

  build_engine:
    - mkdir -p build
    - |
      if [ ! -d "build/q-e" ]; then
        git clone --branch mdi_plugin https://github.com/MolSSI-MDI/q-e.git build/q-e
      fi
    - cd build/q-e

    # Configuring requires a full rebuild, so only do it once
    - |
      if [ ! -f "/repo/build/q-e/MDI/src/qemdi.x" ]; then
        ./configure --enable-parallel --enable-openmp --enable-shared FFLAGS="-fPIC" FCFLAGS="-fPIC" CFLAGS="-fPIC" try_foxflags="-fPIC -cpp"
      fi
    - make -j 1 mdi


  validate_engine:
    - export LD_LIBRARY_PATH=/repo/build/q-e/mdi/build/mdi_build-prefix/src/mdi_build-build/MDI_Library
    - cd tests/water
    #- mpirun -n 1 ../../build/q-e/PW/src/pw.x -in qe.in
    
engine_tests:
  # Provide at least one example input that can be used to test your code's MDI functionality
  script:
    #- source /opt/intel/oneapi/setvars.sh --force
    - export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/opt/intel/oneapi/mkl/2022.2.0/lib/intel64/"
    - export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/opt/intel/oneapi/mkl/2022.2.0/lib/intel64/"
    - export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/repo/build/q-e/mdi/build/mdi_build-prefix/src/mdi_build-build/MDI_Library:/repo/build/q-e/MDI/src"
    - cd tests/water
    - /repo/build/q-e/MDI/src/qemdi.x -mdi "${MDI_OPTIONS}" -in qe.in

run_scripts:

  plugin:
    containers:
      container1:
        image: 'mdi/qe-intel'
        script:
          - export OMP_NUM_THREADS=1
          - cd tests/water
          - mpiexec -n 2 python ../drivers/plugin_driver.py --plugin_name "qemdi" --mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/MDI/src" --plugin_command_line "--in qe.in"

  plugin_c:
    containers:
      container1:
        image: 'mdi/qe-intel'
        script:
          - cd tests/water
          - ../../build/q-e/mdi/build/driver_plug_c -plugin_name qemdi -mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/MDI/src"

  plugin_cxx:
    containers:
      container1:
        image: 'mdi/qe-intel'
        script:
          - cd tests/water
          - ../../build/MDI_Library/build/driver_plug_cxx -driver_nranks 0 -plugin_nranks 1 -plugin_name qemdi -mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/MDI/src"

  plugin_python:
    containers:
      container1:
        image: 'mdi/qe-intel'
        script:
          - export OMP_NUM_THREADS=1
          #- cd tests/drivers
          #- python plugin_driver.py -mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/MDI/src"
          - cd tests/water
          #- export LD_LIBRARY_PATH=/repo/build/MDI_Library/build/MDI_Library
          #- export RPATH=/repo/build/MDI_Library/build/MDI_Library
          #- python ../../build/MDI_Library/build/driver_plug_py.py -plugin_name qemdi -driver_nranks 0 -plugin_nranks 1 -mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/MDI/src"
          - mpiexec -n 2 python ../drivers/driver_plug_py.py --plugin_name "qemdi" --mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/MDI/src"

  test:
    containers:
      container1:
        image: 'mdi/qe-intel'
        script:
          - export LD_LIBRARY_PATH="/repo/build/q-e/mdi/build/mdi_build-prefix/src/mdi_build-build/MDI_Library:/repo/build/q-e/MDI/src"
          - cd tests/water
          - /repo/build/q-e/PW/src/pw.x -in qe.in

#engine_tests:
  # Provide at least one example input that can be used to test your code's MDI functionality
#  script:
#    - export LD_LIBRARY_PATH=/repo/build/q-e/mdi/build/MDI_Library
#    - cd tests/water
#    - ../../build/q-e/PW/src/pw.x -in qe.in -mdi "${MDI_OPTIONS}"

test_drivers:
  test_driver:
    script:
      - cd tests/drivers
      - python driver.py -mdi "-role DRIVER -name driver -method TCP -port 8021"


