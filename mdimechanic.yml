code_name: 'QE'
docker:
  image_name: 'mdi/qe'

  build_image:
    - apt-get update
    - apt-get install -y git wget
    - pip install cmake
    - pip install pymdi
    - pip install mpi4py

  build_engine:
    - |
      if [ ! -d "build/q-e" ]; then
        git clone --branch mdi_plugin https://github.com/MolSSI-MDI/q-e.git build/q-e
      fi
    - cd build/q-e
    # Configuring requires a full rebuild, so only do it once
    - |
      if [ ! -f "PW/src/pw.x" ]; then
        ./configure --enable-parallel --enable-openmp --enable-shared FFLAGS="-fPIC" FCFLAGS="-fPIC" CFLAGS="-fPIC" foxflags="-fPIC" try_foxflags="-fPIC"
      fi
    - make -j 4 mdi couple


  validate_engine:
    - export LD_LIBRARY_PATH=/repo/build/q-e/mdi/build/MDI_Library
    - cd tests/water
    - ../../build/q-e/PW/src/pw.x -in qe.in

run_scripts:
  plugin:
    containers:
      container1:
        image: 'mdi/qe'
        script:
          - cd tests/water
          - ../../build/q-e/mdi/build/driver_plug_c -plugin_name qemdi -mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/COUPLE/src"

  plugin_python:
    containers:
      container1:
        image: 'mdi/qe'
        script:
          - cd tests/drivers
          - python plugin_driver.py -mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/COUPLE/src"

engine_tests:
  # Provide at least one example input that can be used to test your code's MDI functionality
  script:
    - export LD_LIBRARY_PATH=/repo/build/q-e/mdi/build/MDI_Library
    - cd tests/water
    - ../../build/q-e/PW/src/pw.x -in qe.in -mdi "${MDI_OPTIONS}"

test_drivers:
  test_driver:
    script:
      - cd tests/drivers
      - python driver.py -mdi "-role DRIVER -name driver -method TCP -port 8021"
