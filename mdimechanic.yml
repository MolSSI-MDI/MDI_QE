code_name: 'QE'
docker:
  image_name: 'mdi/qe'

  build_image:
    - apt-get update
    - apt-get install -y git wget vim
    - pip install cmake
    - pip install pymdi
    - pip install mpi4py
    
    - echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/repo/build/q-e/mdi/build/mdi_build-prefix/src/mdi_build-build/MDI_Library:/repo/build/q-e/MDI/src" >> ~/.profile

  build_engine:
    - mkdir -p build
    - |
      if [ ! -d "build/q-e" ]; then
        git clone --branch mdi_plugin https://github.com/MolSSI-MDI/q-e.git build/q-e
      fi
    - cd build/q-e

    # Configuring requires a full rebuild, so only do it once
    - |
      if [ ! -f "/repo/build/q-e/MDI/src/qemdi.x" ]; then
        ./configure --enable-parallel --enable-openmp --enable-shared FFLAGS="-fPIC" FCFLAGS="-fPIC" CFLAGS="-fPIC" try_foxflags="-fPIC -cpp"
      fi
    - make -j 1 mdi

    # Build a copy of the MDI Library for testing purposes
    #- cd /repo
    #- |
    #  if [ ! -d "build/MDI_Library" ]; then
    #    git clone https://github.com/MolSSI-MDI/MDI_Library.git build/MDI_Library
    #  fi
    #- mkdir -p build/MDI_Library/build
    #- cd build/MDI_Library/build
    #- cmake -Dtest_codes=ON ..
    #- make


  validate_engine:
    - export LD_LIBRARY_PATH=/repo/build/q-e/mdi/build/mdi_build-prefix/src/mdi_build-build/MDI_Library
    - cd tests/water
    - mpirun -n 1 ../../build/q-e/PW/src/pw.x -in qe.in
    
engine_tests:
  # Provide at least one example input that can be used to test your code's MDI functionality
  script:
    - export LD_LIBRARY_PATH="/repo/build/q-e/mdi/build/mdi_build-prefix/src/mdi_build-build/MDI_Library:/repo/build/q-e/MDI/src"
    - cd tests/water
    - /repo/build/q-e/MDI/src/qemdi.x -mdi "${MDI_OPTIONS}" -in qe.in

run_scripts:

  plugin:
    containers:
      container1:
        image: 'mdi/qe:dev'
        script:
          - export OMP_NUM_THREADS=1
          - cd tests/water
          - mpiexec -n 2 python ../drivers/plugin_driver.py --plugin_name "qemdi" --mdi "-role DRIVER -name driver -method LINK -plugin_path /repo/build/q-e/MDI/src" --plugin_command_line "--in qe.in"

  test:
    containers:
      container1:
        image: 'mdi/qe:dev'
        script:
          - cd tests/water
          - /repo/build/q-e/PW/src/pw.x -in qe.in

test_drivers:
  test_driver:
    script:
      - cd tests/drivers
      - python driver.py -mdi "-role DRIVER -name driver -method TCP -port 8021"


